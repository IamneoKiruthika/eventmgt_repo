{"version":3,"sources":["./src/environments/environment.ts","./src/app/service/event.service.ts","./src/app/event-list/event-list.component.ts","./src/app/event-list/event-list.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/event-form/event-form.component.ts","./src/app/event-form/event-form.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Event } from '../model/event.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n\n  private baseUrl = 'https://cloudcourse8cc3f.uc.r.appspot.com';\n\n  constructor(private http: HttpClient) { }\n\n  getEvents(): Observable<Event[]> {\n    return this.http.get<Event[]>(`${this.baseUrl}/api/events`);\n  }\n\n  getEventById(id: number): Observable<Event> {\n    return this.http.get<Event>(`${this.baseUrl}/api/events/${id}`);\n  }\n\n  createEvent(event: Event): Observable<Event> {\n    return this.http.post<Event>(`${this.baseUrl}/api/events`, event);\n  }\n\n  updateEvent(id: number, event: Event): Observable<Event> {\n    return this.http.put<Event>(`${this.baseUrl}/api/events/${id}`, event);\n  }\n\n  deleteEvent(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.baseUrl}/api/events/${id}`);\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EventService } from '../service/event.service';\nimport { Event } from '../model/event.model';\n\n@Component({\n  selector: 'app-event-list',\n  templateUrl: './event-list.component.html',\n  styleUrls: ['./event-list.component.css']\n})\nexport class EventListComponent implements OnInit {\n\n  events: Event[] = [];\n  successMessage: string;\n\n  constructor(private eventService: EventService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.eventService.getEvents().subscribe(data => {\n      this.events = data;\n    });\n  }\n\n  deleteEvent(id: number): void {\n    this.eventService.deleteEvent(id).subscribe(\n      () => {\n        this.events = this.events.filter(event => event.id !== id);\n        this.successMessage = 'Event deleted successfully'; // Set the success message\n\n        setTimeout(() => {\n          this.successMessage = '';\n        }, 2000);\n      },\n      error => {\n        console.error('Error deleting event', error);\n      }\n    );\n  }\n\n  editEvent(id: number): void {\n    this.router.navigate([`/edit/${id}`]);\n  }\n\n  addEvent(): void {\n    this.router.navigate(['/add-event']);\n  }\n}","<div class=\"container mt-5\">\n  <h2 class=\"text-center mb-4\">Event List</h2>\n\n  <div class=\"table-wrapper\">\n    <table class=\"table table-striped table-hover\">\n      <thead class=\"thead-dark\">\n        <tr>\n          <th>Name</th>\n          <th>Date</th>\n          <th>Location</th>\n          <th>Description</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let event of events\">\n          <td>{{ event.name }}</td>\n          <td>{{ event.date | date: 'longDate' }}</td>\n          <td>{{ event.location }}</td>\n          <td>{{ event.description }}</td>\n          <td>\n            <button class=\"btn btn-primary btn-sm mr-2\" (click)=\"editEvent(event.id)\">Edit</button>\n            <button class=\"btn btn-danger btn-sm\" (click)=\"deleteEvent(event.id)\">Delete</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n      <!-- Success Message -->\n  <div *ngIf=\"successMessage\" class=\"alert alert-success text-center\">\n    {{ successMessage }}\n  </div>\n  </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angularapp';\n}\n","<div class=\"container\">\n    <header class=\"header py-4\">\n      <h1 class=\"title\">Event Management Platform</h1>\n      <nav class=\"navbar\">\n        <ul class=\"nav-list\">\n          <li class=\"nav-item\"><a class=\"nav-link\" routerLink=\"/events\">Events</a></li>\n          <li class=\"nav-item\"><a class=\"nav-link\" routerLink=\"/events/add-event\">Create Event</a></li>\n        </ul>\n      </nav>\n    </header>\n    <main class=\"content mt-4\">\n      <router-outlet></router-outlet>\n    </main>\n  </div>  ","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { EventListComponent } from './event-list/event-list.component';\nimport { EventFormComponent } from './event-form/event-form.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EventListComponent,\n    EventFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EventService } from '../service/event.service';\nimport { Event } from '../model/event.model';\n\n@Component({\n  selector: 'app-event-form',\n  templateUrl: './event-form.component.html',\n  styleUrls: ['./event-form.component.css']\n})\nexport class EventFormComponent implements OnInit {\n  eventForm: FormGroup;\n  isEditMode = false;\n  successMessage: string = '';\n  minDate: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private eventService: EventService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    this.eventForm = this.formBuilder.group({\n      id: [null],\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      location: ['', Validators.required],\n      date: ['', Validators.required]\n    });\n  }\n\n  ngOnInit(): void {\n    const today = new Date();\n    this.minDate = today.toISOString().split('T')[0];\n    const id = this.route.snapshot.paramMap.get('id');\n    if (id) {\n      this.isEditMode = true;\n      this.loadEventDetails(+id);\n    }\n  }\n\n  private loadEventDetails(id: number): void {\n    this.eventService.getEventById(id).subscribe(\n      (event: Event) => this.eventForm.patchValue(event),\n      error => console.error('Error fetching event', error)\n    );\n  }\n\n  onSubmit(): void {\n    if (this.eventForm.invalid) return;\n\n    if (this.isEditMode) {\n      this.updateEvent();\n    } else {\n      this.createEvent();\n    }\n  }\n\n  private updateEvent(): void {\n    const eventId = this.eventForm.value.id;\n    this.eventService.updateEvent(eventId, this.eventForm.value).subscribe(\n      response => {\n        this.successMessage = 'Event successfully updated';\n        setTimeout(() => {\n          this.router.navigate(['/events']);\n        }, 2000);\n      },\n      error => console.error('Error updating event', error)\n    );\n  }\n  \n  private createEvent(): void {\n    this.eventService.createEvent(this.eventForm.value).subscribe(\n      response => {\n        this.successMessage = 'Event successfully created';\n        setTimeout(() => {\n          this.router.navigate(['/events']);\n        }, 2000); // Delay of 2 seconds\n      },\n      error => console.error('Error creating event', error)\n    );\n  }  \n}\n","<div class=\"container\">\n  <div class=\"form-card\">\n    <h2 class=\"text-center\">\n      {{ isEditMode ? 'Edit' : 'Create' }} Event\n    </h2>\n\n    <form [formGroup]=\"eventForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-group\">\n        <label for=\"name\" class=\"form-label\">Event Name </label>\n        <input\n          id=\"name\"\n          formControlName=\"name\"\n          class=\"form-control\"\n          placeholder=\"Enter event name\"\n        />\n        <div *ngIf=\"eventForm.get('name').invalid && eventForm.get('name').touched\" class=\"text-danger\">\n          Event name is required.\n        </div>\n      </div>\n\n      <div class=\"form-group mb-3\">\n        <label for=\"description\" class=\"form-label\">Description </label>\n        <textarea\n          id=\"description\"\n          formControlName=\"description\"\n          class=\"form-control description-box\"\n          placeholder=\"Enter event description\"\n          rows=\"4\"\n        ></textarea>\n        <div *ngIf=\"eventForm.get('description').invalid && eventForm.get('description').touched\" class=\"text-danger\">\n          Description is required.\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"location\" class=\"form-label\">Location </label>\n        <input\n          id=\"location\"\n          formControlName=\"location\"\n          class=\"form-control\"\n          placeholder=\"Enter event location\"\n        />\n        <div *ngIf=\"eventForm.get('location').invalid && eventForm.get('location').touched\" class=\"text-danger\">\n          Location is required.\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"date\" class=\"form-label\">Date </label>\n        <input\n          id=\"date\"\n          type=\"date\"\n          formControlName=\"date\"\n          class=\"form-control\"\n          [min]=\"minDate\"\n        />\n        <div *ngIf=\"eventForm.get('date').invalid && eventForm.get('date').touched\" class=\"text-danger\">\n          Date is required.\n        </div>\n      </div>\n\n      <button\n        class=\"btn btn-primary w-100\"\n        type=\"submit\"\n        [disabled]=\"eventForm.invalid\"\n      >\n        {{ isEditMode ? 'Update' : 'Save' }}\n      </button>\n\n      <!-- Success Message Display -->\n    <div *ngIf=\"successMessage\" class=\"alert alert-success\">\n      {{ successMessage }}\n    </div>\n    </form>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EventListComponent } from './event-list/event-list.component';\nimport { EventFormComponent } from './event-form/event-form.component';\n\nconst routes: Routes = [\n  { path: 'events', component: EventListComponent },\n  { path: 'events/add-event', component: EventFormComponent },\n  { path: 'edit/:id', component: EventFormComponent },\n  { path: '', redirectTo: '/events', pathMatch: 'full' },\n  { path: '**', redirectTo: '/events' }  // Wildcard route for handling 404 cases\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}